apiVersion: apps/v1
kind: Deployment
metadata:
  name: pylon-auth-carrier
  labels:
    {{- include "carrier-io.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "carrier-io.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "carrier-io.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "carrier-io.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-pylon-auth
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.pylon_auth.repository }}:{{ .Values.images.pylon.tag }}"
          imagePullPolicy: {{ .Values.images.pylon.pullPolicy }}
          command: ["/bin/sh","-c"]
          args: ["python -m pylon.main || sleep infinity"]
          ports:
            - containerPort: {{ .Values.images.pylon.containerPort }}
              protocol: TCP
          volumeMounts:
            - mountPath: /data/pylon
              name: pylon-auth-claim0
            - mountPath: /data/config
              name: pylon-auth-config
          envFrom:
            - configMapRef:
                name: env
          env:
            - name: CORE_CONFIG_SEED
              value: "file:/data/config/pylon_auth.yml"
#          livenessProbe:
#            httpGet:
#              path: /
#              port: 80
#          readinessProbe:
#            httpGet:
#              path: /
#              port: 80
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: pylon-auth-claim0
          persistentVolumeClaim:
            claimName: pylon-auth-claim0
        - name: pylon-auth-config
          configMap:
            name: pylon-auth-config-local
