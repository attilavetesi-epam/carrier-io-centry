version: '3'
services:
  traefik:
    image: traefik:picodon
    environment:
      - TRAEFIK_PROVIDERS_DOCKER=true
      - TRAEFIK_API_DASHBOARD=true
      - TRAEFIK_PING_MANUALROUTING=true
      - TRAEFIK_ENTRYPOINTS_HTTP_ADDRESS=:80
      - TRAEFIK_ENTRYPOINTS_HTTP_FORWARDEDHEADERS_TRUSTEDIPS=127.0.0.1/32
      - TRAEFIK_LOG_FORMAT=common
      - TRAEFIK_LOG_LEVEL=DEBUG
    networks:
      - pylon
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  postgres:
    image: postgres:12.2
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - postgre-data:/var/lib/postgresql/data
      - ./config/extras/postgre_schemas.sh:/docker-entrypoint-initdb.d/postgre_schemas.sh
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_SCHEMAS=${DB_POSTGRES_SCHEMAS}
      - POSTGRES_INITDB_ARGS=${POSTGRES_INITDB_ARGS}
    networks:
      - pylon

  pylon:
    image: getcarrier/pylon:latest
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    restart: unless-stopped
    user: ${UID}
    volumes:
      - .:/data
    env_file:
      - .env
    networks:
      - pylon
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.pylon.rule=PathPrefix(`/`)'
      - 'traefik.http.services.pylon.loadbalancer.server.port=8080'
    depends_on:
      - postgres
      - traefik

volumes:
  postgre-data:

networks:
  pylon:
